from os import listdir as listDir
from shutil import rmtree as rmTree

#Unescape brackets and removes backslashes to make a valid JSON text.
def _decodeLine(line):
    line = line.replace("\"[", "[")
    line = line.replace("]\"", "]")
    line = line.encode('latin1', 'backslashreplace').decode('unicode-escape')
    line = line.replace("\"{", "{")
    line = line.replace("}\"", "}")
    return line

#Reads the tempFolder to read the files generated by Spark.
#If the file named _SUCCESS is present, that means the write was successful and starts to merge then.
#The result is a json file where each line represents an object (don't confuse it with a JSON Array).
#After the resulting file is saved on outputLocation, the tempFolder is removed.
def formatFile(tempFolder, outputLocation):
    tmpFileList = listDir(tempFolder)
    if '_SUCCESS' in tmpFileList:
        with open(outputLocation, 'w') as output:
            for tmpFileName in tmpFileList:
                if tmpFileName.endswith(".json"):
                    tmpFileLocation = tempFolder+'/'+tmpFileName
                    with open(tmpFileLocation) as tmpFile:
                        for line in tmpFile:
                            line = line.strip()
                            if len(line) > 0:
                                output.write(_decodeLine(line))
                                output.write('\n')
        rmTree(tempFolder)
        return True
    else:
        return False
